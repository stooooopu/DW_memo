src = sorce pile

method : 재사용성과 코드의 간결함 증가
1. 메소드(함수, 기능)란? 
각 기능을 분리해서 개발해야 소프트웨어 품질 향상
ex) 로봇 팔, 다리(업무분담을 위해 각자 본인이 개발 할 것들을 나누ㅓ야해요 )
 (응집도는 높고 {함수안에 있는 코드가 딴딴하고} 결합도는 낮아야 좋은 소프트웨어)

2. main method : 자바에서 먼저 실해되는 기능(함수)
static이 붙은  함수에는 static함수만 올 수 있다.

3. 접근지정자 : 객체지향 언어는 대부분 평균4개의 접근지정자가 있음
(거의 위에 두개만 쓰고 밑에 두개는 예외의 경우에 사용)
-public : 다른 클래스에서 호출 가능
-private : 내부 클래스에서만 호출 가능 
-protected 
-default 접근지정자

4. 문법
 *함수이름은 동사
 <접근 지정자> <리턴타입> <함수이름/메소드이름> <인자값/파라미터값>
       public          int	   getSum    (int x, String y, ...){
	          int sum = 10;
	          return sum;
	         //리턴타입이 int형이면
	         // int형 데이터를 반환(return)해야함
	         //return 10;으로 바로 리턴가능
	}
1)리턴타입 : 메소드의 최종 결과값을 반환
  리턴타입에는 데이터타입8개(int,double,float,long...) + 클래스타입(String) 1개 = 총9개
  리턴할게 없을 때는 void로 표현

2)인자값/파라미터값
  데이터타입8개(int,double,float,long...) + 클래스타입(String) 1개 = 총9개
  인자값이 없을 때는 ()빈 괄호
  ***인자값은 3개이하로 작성
  콤마로 구별함
 //인자는 결과를 만들기 위한 재료

3)메소드 : 이름을 동사로 (명사로 작성하면 혼남)

//if로만 return을 하면 무조건 return을 마지막 줄에 한번 더 입력해야 함
(컴퓨터는 혹시라도 틀릴 수있다는 가정을 하기 때문에 꼭 else를 써 줘야함)
 	ex) int x=30
		if (x==30){return 0;} //여기까지만 쓰면 오류 왜냐면 컴퓨터는 틀렸을 가능성까지 고려하기 때문에
		else (return 0;) //여기까지 쓰면 if나 else중 하나는 맞다고 실행하기 때문에 오류 안남



