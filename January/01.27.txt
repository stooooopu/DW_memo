상속 객체지향
인터페이스 객체지향
static 객체지향
제네릭컬렉션 자바특징
---------------------------이 위는 웹 시간에!

1. 플래그(Flag)
=>깃발! (현실세계)
=>상태를 기록하고 처리 흐름을 ☆제어★하기 위한
boolean형 변수
flag값이 ture or false 냐에 따라
다른 코드를 실행시키는 것
==>
ex) 회원가입시 양식에 맞게 작성하면 true => 회원저장
			아니면 false => 뒤로가기 or 다시입력

==>Java는 boolean형이 있음
	  boolean이 없는 프로그래밍 언어가 있음
	  ex) C언어
	       true == 1
	       false == 0

★☆★☆★☆★☆코딩 규칙★☆★☆★☆★☆
1. 플래그를 남발하지 말자!
2. boolean타입의 변수를 사용할 때는 앞에 is+명사로 쓰자
	-요새는 데이터 타입이 없는 프로그램을 많이 사용
	그래서 어떤게 boolean형인지 모름 그래서 변수 이름을 붙이는거에 신경을 많이 씀
	ex) isResult? isTrue?
3. 메소드 이름, 변수이름은 길면 길 수록 좋다


프로그래밍에서 !는 부정을 의미
(다르다, false)


☆★get, set method
     필드변수 접근지정자를 private로 설정함으로써,
     다른 클래스 파일에서 불러 올 수가 없음 (보안성!)
1. private 필드변수를 생성자로 접근할까?
	장점) 클래스 호출과 동시에 값 초기화
	단점) 유지보수힘듦
	(필드변수가 많아지면 많아질 수록 상황은 악화 됨)
2. private 필드변수마다 메소드를 생성할까?
	장점) 유지보수가 편리
	단점) 필드변수가 추가 될 때 마다 
	메소드를 만들어야 함
	=>이클립스같은 프로그램에서 자동으로 생성가넝->단점 극뽁!!