☆★class☆★ 
-객체지향언어 특징임


//class = 객체 = Object
//Pizza class에는 Pizza와 관련된 변수와 함수만 위치한다
//class는 필드(전역)변수와 메소드로만 구성

public class Pizza{
	int 햄;
	String 피자이름;
	

	public void 도우를만들다() {
		int x = 0;
		//외부에서 피자를 불러올때 안에 있는 메소드 변수x는 불러올 수 없음
	}
}

//조건)클래스와 메소드를 실행해서 결과 값을 보고싶을 때
//자바는 메인 함수만 앎
//그래서 파일 불러올 때 메인 함수에서 해야함
//메소드도 메인함수에서 불러와야함

public class Pizza 피자스쿨{

 public static void main(String[] args){
	      ★ Pizza        치즈피자             = 	      new Pizza();
	☆//<데이터 타입><변수이름>   <대입연산자>           <클래스>
		★치즈피자.햄 = 100;
		☆//치즈피자.햄 = "추가"; => error Pizza class 에 햄은 int니까
		☆//.을 찍어서 해당 클래스(Pizza) 변수(햄, 피자이름) 혹은 메소드(도우를만들다) 호출 가능
		★치즈피자.도우를만들다(); 
		☆//이렇게 메소드 불러오기

	☆//치즈피자 = new Pizza();
	☆//로 할 경우는 기존 변수에 다른 데이터값을 넣는 것과 동일
	☆//int x = 10; x = 5; 이것과 동일
	
	★Pizza 불고기피자 = new Pizza();
	
	★불고기피자.햄 = 50;
	☆//이때까진 불고기피자에 햄은 50
	
	★불고기피자 = 치즈피자
	☆//이젠 불고기피자엔 햄이 100
	☆//기존 불고기피자 데이터가 사라진것
	☆//int x = 10; int y = 5; x=y; 이것과 동일

	★Pizza pizza[] = new Pizza 이것도 가능
	☆//class도 데이터타입이기 때문에 배열선언 가능
	☆//pizza[0] = 치즈피자;
	☆//pizza[1] = 불고기피자;
	☆//이런식으로 가능
	☆//근데 이거 대신 제네릭으로 대체됨
	
}
}